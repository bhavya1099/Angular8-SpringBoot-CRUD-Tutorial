/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

Test Scenario 1: Null Timestamp
- Validate the behavior of the ErrorDetails function when a null timestamp is provided.

Test Scenario 2: Valid Timestamp
- Validate the behavior of the ErrorDetails function when a valid timestamp is provided.

Test Scenario 3: Null Message
- Validate the behavior of the ErrorDetails function when a null message is provided.

Test Scenario 4: Valid Message
- Validate the behavior of the ErrorDetails function when a valid message is provided.

Test Scenario 5: Null Details
- Validate the behavior of the ErrorDetails function when null details are provided.

Test Scenario 6: Valid Details
- Validate the behavior of the ErrorDetails function when valid details are provided.

Test Scenario 7: All Parameters Null
- Validate the behavior of the ErrorDetails function when all parameters are null.

Test Scenario 8: All Parameters Valid
- Validate the behavior of the ErrorDetails function when all parameters are valid.

Test Scenario 9: Invalid Timestamp
- Validate the behavior of the ErrorDetails function when an invalid timestamp is provided.

Test Scenario 10: Empty Message
- Validate the behavior of the ErrorDetails function when an empty message is provided.

Test Scenario 11: Empty Details
- Validate the behavior of the ErrorDetails function when empty details are provided.
*/
package net.guides.springboot2.springboot2jpacrudexample.exception;

import java.util.Date;
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;

public class ErrorDetails_ErrorDetails_b0aa6b955f_Test {

    @Test
    public void testNullTimestamp() {
        ErrorDetails errorDetails = new ErrorDetails(null, "message", "details");
        assertNull(errorDetails.getTimestamp());
    }

    @Test
    public void testValidTimestamp() {
        Date timestamp = new Date();
        ErrorDetails errorDetails = new ErrorDetails(timestamp, "message", "details");
        assertEquals(timestamp, errorDetails.getTimestamp());
    }

    @Test
    public void testNullMessage() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), null, "details");
        assertNull(errorDetails.getMessage());
    }

    @Test
    public void testValidMessage() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), "message", "details");
        assertEquals("message", errorDetails.getMessage());
    }

    @Test
    public void testNullDetails() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), "message", null);
        assertNull(errorDetails.getDetails());
    }

    @Test
    public void testValidDetails() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), "message", "details");
        assertEquals("details", errorDetails.getDetails());
    }

    @Test
    public void testAllParametersNull() {
        ErrorDetails errorDetails = new ErrorDetails(null, null, null);
        assertNull(errorDetails.getTimestamp());
        assertNull(errorDetails.getMessage());
        assertNull(errorDetails.getDetails());
    }

    @Test
    public void testAllParametersValid() {
        Date timestamp = new Date();
        ErrorDetails errorDetails = new ErrorDetails(timestamp, "message", "details");
        assertEquals(timestamp, errorDetails.getTimestamp());
        assertEquals("message", errorDetails.getMessage());
        assertEquals("details", errorDetails.getDetails());
    }

    @Test
    public void testEmptyMessage() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), "", "details");
        assertEquals("", errorDetails.getMessage());
    }

    @Test
    public void testEmptyDetails() {
        ErrorDetails errorDetails = new ErrorDetails(new Date(), "message", "");
        assertEquals("", errorDetails.getDetails());
    }
}
