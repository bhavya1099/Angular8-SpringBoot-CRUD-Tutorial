/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

Test Scenario 1: Null Value Check
- Verify that when the `lastName` field is null, the `getLastName()` method returns null.

Test Scenario 2: Non-Null Value Check
- Verify that when the `lastName` field has a non-null value, the `getLastName()` method returns the correct `lastName`.

Test Scenario 3: Empty String Check
- Verify that when the `lastName` field is an empty string, the `getLastName()` method returns an empty string.

Test Scenario 4: White Space Check
- Verify that when the `lastName` field contains only white spaces, the `getLastName()` method returns the white spaces.

Test Scenario 5: Special Characters Check
- Verify that when the `lastName` field contains special characters, the `getLastName()` method returns the special characters.

Test Scenario 6: Numeric Value Check
- Verify that when the `lastName` field contains numeric values, the `getLastName()` method returns the numeric values.

Test Scenario 7: Alphanumeric Value Check
- Verify that when the `lastName` field contains alphanumeric values, the `getLastName()` method returns the alphanumeric values.

Test Scenario 8: Maximum Length Check
- Verify that when the `lastName` field has a value of maximum length as per the database schema, the `getLastName()` method returns the correct `lastName`.

Test Scenario 9: Unicode Characters Check
- Verify that when the `lastName` field contains Unicode characters, the `getLastName()` method returns the Unicode characters.

Test Scenario 10: Case Sensitivity Check
- Verify that the `getLastName()` method is case sensitive and returns the `lastName` exactly as it is stored, preserving the case.
*/
package net.guides.springboot2.springboot2jpacrudexample.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class Employee_getLastName_4814a2dee7_Test {

    private Employee employee;

    @BeforeEach
    public void setUp() {
        employee = new Employee();
    }

    @Test
    public void testGetLastName_NullValue() {
        employee.setLastName(null);
        assertNull(employee.getLastName());
    }

    @Test
    public void testGetLastName_NonNullValue() {
        employee.setLastName("Smith");
        assertEquals("Smith", employee.getLastName());
    }

    @Test
    public void testGetLastName_EmptyString() {
        employee.setLastName("");
        assertEquals("", employee.getLastName());
    }

    @Test
    public void testGetLastName_WhiteSpace() {
        employee.setLastName(" ");
        assertEquals(" ", employee.getLastName());
    }

    @Test
    public void testGetLastName_SpecialCharacters() {
        employee.setLastName("@#$$%!");
        assertEquals("@#$$%!", employee.getLastName());
    }

    @Test
    public void testGetLastName_NumericValues() {
        employee.setLastName("123456");
        assertEquals("123456", employee.getLastName());
    }

    @Test
    public void testGetLastName_AlphanumericValues() {
        employee.setLastName("John123");
        assertEquals("John123", employee.getLastName());
    }

    @Test
    public void testGetLastName_MaxLength() {
        String lastName = new String(new char[255]).replace('\0', 'A');
        employee.setLastName(lastName);
        assertEquals(lastName, employee.getLastName());
    }

    @Test
    public void testGetLastName_UnicodeCharacters() {
        employee.setLastName("\u005A\u006F\u0065");
        assertEquals("\u005A\u006F\u0065", employee.getLastName());
    }

    @Test
    public void testGetLastName_CaseSensitivity() {
        employee.setLastName("JohnDoe");
        assertEquals("JohnDoe", employee.getLastName());
    }
}
