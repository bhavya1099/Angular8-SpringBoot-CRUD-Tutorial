/*
Test generated by RoostGPT for test demoTestGitlab using AI Type Open AI and AI Model gpt-4

1. Scenario: Test when ResourceNotFoundException is thrown.
   Expected Result: The function should catch the exception, create an ErrorDetails object with the current date, exception message, and request description. The function should return a ResponseEntity with the ErrorDetails object and HTTP status as NOT_FOUND.

2. Scenario: Test the ErrorDetails object creation.
   Expected Result: The ErrorDetails object should be created with the correct date, exception message, and request description.

3. Scenario: Test the HttpStatus of the returned ResponseEntity.
   Expected Result: The HttpStatus of the returned ResponseEntity should be NOT_FOUND.

4. Scenario: Test the body of the returned ResponseEntity.
   Expected Result: The body of the returned ResponseEntity should be the ErrorDetails object.

5. Scenario: Test the function with a null exception.
   Expected Result: The function should handle the null exception and not crash. The ErrorDetails object should contain a null message.

6. Scenario: Test the function with a null request.
   Expected Result: The function should handle the null request and not crash. The ErrorDetails object should contain a null request description.

7. Scenario: Test the function with a null exception and a null request.
   Expected Result: The function should handle the null values and not crash. The ErrorDetails object should contain null values.

8. Scenario: Test the function with different types of exceptions.
   Expected Result: The function should only catch ResourceNotFoundException and let other exceptions propagate.

9. Scenario: Test the function with different request descriptions.
   Expected Result: The ErrorDetails object should contain the correct request description regardless of its content or length.

10. Scenario: Test the function with a custom exception message.
    Expected Result: The ErrorDetails object should contain the custom exception message.
*/
package net.guides.springboot2.springboot2jpacrudexample.exception;

import java.util.Date;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.context.request.WebRequest;
import org.springframework.mock.web.MockHttpServletRequest;

public class GlobalExceptionHandler_resourceNotFoundException_0b5e3d2cbd_Test {

    @Test
    public void testResourceNotFoundException() {

        GlobalExceptionHandler handler = new GlobalExceptionHandler();
        MockHttpServletRequest request = new MockHttpServletRequest();
        ResourceNotFoundException exception = new ResourceNotFoundException("Test Exception");

        ResponseEntity<?> responseEntity = handler.resourceNotFoundException(exception, request);

        // Scenario: Test when ResourceNotFoundException is thrown.
        assertNotNull(responseEntity);

        // Scenario: Test the ErrorDetails object creation.
        assertTrue(responseEntity.getBody() instanceof ErrorDetails);

        // Scenario: Test the HttpStatus of the returned ResponseEntity.
        assertEquals(responseEntity.getStatusCode(), HttpStatus.NOT_FOUND);

        // Scenario: Test the body of the returned ResponseEntity.
        ErrorDetails errorDetails = (ErrorDetails) responseEntity.getBody();
        assertNotNull(errorDetails);

        // Scenario: Test the function with a null exception.
        ResponseEntity<?> responseEntityNullEx = handler.resourceNotFoundException(null, request);
        ErrorDetails errorDetailsNullEx = (ErrorDetails) responseEntityNullEx.getBody();
        assertNull(errorDetailsNullEx.getMessage());

        // Scenario: Test the function with a null request.
        ResponseEntity<?> responseEntityNullReq = handler.resourceNotFoundException(exception, null);
        ErrorDetails errorDetailsNullReq = (ErrorDetails) responseEntityNullReq.getBody();
        assertNull(errorDetailsNullReq.getDetails());

        // Scenario: Test the function with a null exception and a null request.
        ResponseEntity<?> responseEntityNull = handler.resourceNotFoundException(null, null);
        ErrorDetails errorDetailsNull = (ErrorDetails) responseEntityNull.getBody();
        assertNull(errorDetailsNull.getTimestamp());
        assertNull(errorDetailsNull.getMessage());
        assertNull(errorDetailsNull.getDetails());

        // Scenario: Test the function with different types of exceptions.
        // This case is not applicable as the method only accepts ResourceNotFoundException as its argument.

        // Scenario: Test the function with different request descriptions.
        // This case is not applicable as the request description is not manipulated in the method.

        // Scenario: Test the function with a custom exception message.
        String customMessage = "Custom Test Exception";
        ResourceNotFoundException customException = new ResourceNotFoundException(customMessage);
        ResponseEntity<?> responseEntityCustom = handler.resourceNotFoundException(customException, request);
        ErrorDetails errorDetailsCustom = (ErrorDetails) responseEntityCustom.getBody();
        assertEquals(customMessage, errorDetailsCustom.getMessage());
    }
}
